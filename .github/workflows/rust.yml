---
name: "Rust CI"
on:
  workflow_call:

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare dependencies
        run: |
          rustup update stable
          rustup target add x86_64-unknown-linux-musl
          cargo install cargo-auditable

      - name: Extract crate information
        id: crate_metadata
        run: |
          cargo metadata --no-deps --format-version 1 | jq -r '[.packages[0].targets[] | select(.kind == ["bin"]) | .name ] | [.[] | {name: ., target:["x86_64-unknown-linux-musl"][]}] | [.[] | .name + "-" + .target ] | join(" ") | "binary_targets=" + .' | tee -a $GITHUB_OUTPUT
          cargo metadata --no-deps --format-version 1 | jq -r '[.packages[0].targets[] | select(.kind == ["bin"]) | .name ] | [.[] | {name: ., target:["x86_64-unknown-linux-musl"][]}] | [.[] | "cp ./target/" + .target + "/release/" + .name + " " + .name + "-" + .target ] | join("; ") | "binary_copies=" + .' | tee -a $GITHUB_OUTPUT

      - name: Clippy
        run: cargo clippy

      - name: Build
        continue-on-error: true
        run: |
          cargo auditable build --release --target x86_64-unknown-linux-musl
          sh -c "${{ steps.crate_metadata.outputs.binary_copies }}"

      - name: Create release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ github.ref_name }} ${{ steps.crate_metadata.outputs.binary_targets }}
        if: github.ref_type == 'tag'
