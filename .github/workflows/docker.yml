---
name: Docker Workflow

on:
  workflow_call:
    inputs:
      registry:
        description: "Registry to upload images to"
        default: ghcr.io
        required: false
        type: string
      registry_user:
        description: "Username for the container registry"
        default: ${{ github.repository_owner }}
        required: false
        type: string
      image_name:
        description: "Name of the image to be pushed"
        default: ${{ github.repository }}
        required: false
        type: string
      tags:
        description: "Custom tags to build"
        default: |
          type=schedule
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr
        required: false
        type: string
      flavor:
        description: "Behaviour for custom tags for docker-metadata"
        default: |
          prefix=v
        required: false
        type: string
      artifact_name:
        description: "Name of the artifact to be downloaded before"
        required: false
        type: string
      artifact_path:
        description: "Directory where the artifact should be unpacked"
        required: false
        default: .
        type: string
      push:
        description: "Whether to push the image, or just build"
        required: true
        type: boolean
      build_args:
        description: "List of build arguments, as an array inside a string"
        required: false
        default: "[]"
        type: string

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    permissions:
      contents: read
      packages: write

    outputs:
      tags: ${{ steps.tag.outputs.tags }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: famedly/setup-qemu-action@v2

      - name: Setup Docker buildx
        uses: famedly/setup-buildx-action@v2

      - name: Download artifact
        if: ${{ inputs.artifact_name != '' }}
        uses: actions/download-artifact@v3
        with:
          name: ${{inputs.artifact_name}}
          path: ${{inputs.artifact_path}}

      - name: Log into registry ${{ inputs.registry }}
        if: inputs.push
        uses: famedly/login-action@v2
        with:
          registry: ${{ inputs.registry }}
          username: ${{ inputs.registry_user }}
          password: ${{ secrets.registry_password || secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: famedly/metadata-action@v4
        with:
          images: ${{ inputs.registry }}/${{ inputs.image_name }}
          tags: ${{ inputs.tags }}
          flavor: ${{ inputs.flavor }}

      - name: Build and push Docker image
        id: build
        uses: famedly/build-push-action@v4
        with:
          context: .
          push: ${{ inputs.push }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.platform }}
          build-args: ${{ inputs.build_args }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=image,name=${{ inputs.registry }}/${{ inputs.image_name }},push-by-digest=${{ inputs.push }},name-canonical=true,push=${{ inputs.push }}

      - name: Get actual tag
        id: tag
        run: |
          echo "tags=$(echo '${{ toJSON(fromJSON(steps.meta.outputs.json).tags) }}' | jq 'if (type) == "array" then .[0] else . end' | sed 's/\"//g' | cut -d ':' -f 2)" >> $GITHUB_OUTPUT

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests-${{ inputs.registry }}-${{ inputs.image_name }}-${{ steps.tag.outputs.tags }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    if: inputs.push
    needs:
      - docker

    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests-${{ inputs.registry }}-${{ inputs.image_name }}-${{ needs.docker.outputs.tags }}
          path: /tmp/digests

      - name: Set up Docker Buildx
        uses: famedly/setup-buildx-action@v2

      - name: Extract Docker metadata
        id: meta
        uses: famedly/metadata-action@v4
        with:
          images: ${{ inputs.registry }}/${{ inputs.image_name }}
          tags: ${{ inputs.tags }}
          flavor: ${{ inputs.flavor }}

      - name: Log into registry ${{ inputs.registry }}
        uses: famedly/login-action@v2
        with:
          registry: ${{ inputs.registry }}
          username: ${{ inputs.registry_user }}
          password: ${{ secrets.registry_password || secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ inputs.registry }}/${{ inputs.image_name }}@sha256:%s ' *)
      -
        name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ inputs.registry }}/${{ inputs.image_name }}:${{ steps.meta.outputs.version }}

